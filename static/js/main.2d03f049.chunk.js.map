{"version":3,"sources":["userStore/interfaces.ts","userStore/userStore.ts","component/UserForm.tsx","component/UserCardList.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["userAppState","userList","addUser","action","state","payload","push","updateUser","id","editUser","editUserData","find","user","deleteUser","filter","clear","undefined","userStore","createStore","createTypedHooks","useStoreActions","useStoreState","useStoreDispatch","UserForm","addData","updateData","clearEdit","editData","useState","name","age","gender","userInfo","setUserInfo","useEffect","styleClass","useStyles","mediaQueryMatch","useMediaQuery","formConfig","type","valueKey","fieldProps","label","fullWidth","className","bottomMargin","color","isTextHtmlString","text","options","value","Box","display","justifyContent","alignItems","minHeight","p","borderRadius","boxShadow","basicBoxStyle","formId","actionConfig","submitButtonText","submitButtonLayout","submitButtonProps","size","config","initialValues","onSubmit","values","onSubmitProps","getState","length","setSubmitting","enableReinitialize","makeStyles","background","width","maxWidth","margin","marginBottom","UserCardList","userListRef","deleteClick","editClick","map","userRef","mb","boxStyle","Typography","variant","textStyle","mx","Tooltip","title","aria-label","Fab","onClick","editStyle","backgroundColor","App","Grid","container","item","md","xs","style","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.2d03f049.chunk.js","sourcesContent":["import { action, Action } from \"easy-peasy\";\r\n\r\nexport interface UserData {\r\n    id: number;\r\n    name: string;\r\n    age: string;\r\n    gender: string;\r\n}\r\n\r\nexport interface UserApp {\r\n    userList: UserData[];\r\n    editUserData?: UserData;\r\n    addUser: Action<UserApp , UserData>;\r\n    updateUser: Action<UserApp , UserData>;\r\n    editUser: Action<UserApp , number>;\r\n    deleteUser: Action<UserApp , number>;\r\n    clear: Action<UserApp>;\r\n}\r\n\r\nexport const userAppState : UserApp = {\r\n    userList: [],\r\n    addUser: action((state , payload) => {\r\n        state.userList.push(payload);\r\n    }),\r\n    updateUser: action((state , payload) => {\r\n        state.userList[payload.id] = payload;\r\n        return state;\r\n    }),\r\n    editUser: action((state , payload) => {\r\n        return {...state , editUserData: state.userList.find(user => user.id === payload)};\r\n    }),\r\n    deleteUser: action((state , payload) => {\r\n        return {...state , userList: state.userList.filter((user) => user.id !== payload)};\r\n    }),\r\n    clear: action((state) => {\r\n        return {...state , editUserData : undefined};\r\n    })\r\n}","import { createStore, createTypedHooks } from \"easy-peasy\";\r\nimport { UserApp, userAppState } from \"./interfaces\";\r\n\r\nconst userStore = createStore<UserApp>(userAppState);\r\n\r\nexport const { useStoreActions , useStoreDispatch , useStoreState } = createTypedHooks<UserApp>();\r\n\r\nexport default userStore;","import React , { useState, useEffect } from 'react';\r\nimport userStore, { useStoreActions, useStoreState } from '../userStore/userStore';\r\nimport { UserData } from '../userStore/interfaces';\r\nimport { IFormActionProps, ReactForm } from 'react-forms';\r\nimport { Box, makeStyles, useMediaQuery } from '@material-ui/core';\r\nimport { FormikHelpers } from 'formik';\r\n\r\nexport default function UserForm() {\r\n    \r\n    const addData = useStoreActions((action) =>  action.addUser );\r\n    const updateData = useStoreActions((action) => action.updateUser );\r\n    const clearEdit = useStoreActions((action) => action.clear);\r\n\r\n    const editData = useStoreState( state => state.editUserData );\r\n\r\n    const [userInfo, setUserInfo] = useState<UserData>({ id : 0 , name : '' , age : '' , gender : '' });\r\n\r\n    useEffect(() => {\r\n        if(editData !== undefined) {\r\n            setUserInfo(editData);\r\n        }\r\n    }, [editData]);\r\n\r\n    const styleClass = useStyles();\r\n    const mediaQueryMatch = useMediaQuery('(min-width:600px)');\r\n\r\n    const actionConfig : IFormActionProps = {\r\n        submitButtonText: 'Add',\r\n        submitButtonLayout: 'center',\r\n        submitButtonProps: {\r\n            size: 'large',\r\n            fullWidth: true,\r\n            color: 'secondary',\r\n        },      \r\n    };\r\n     \r\n    const formConfig = [{\r\n            type : 'text',\r\n            valueKey : 'name',\r\n            \r\n            fieldProps : { label : 'Name' , fullWidth: true , className: styleClass.bottomMargin , color: 'secondary', } ,\r\n        },\r\n        {\r\n            type : 'text',\r\n            valueKey : 'age',\r\n            fieldProps : { label : 'Age' , fullWidth: true , className: styleClass.bottomMargin , color: 'secondary', } ,\r\n        },\r\n        {\r\n            type: 'mui-plain-text',\r\n            valueKey: 'gender-title',\r\n            fieldProps:{\r\n                isTextHtmlString: false, \r\n                text: \"Gender :\",\r\n            }\r\n        },\r\n        {\r\n            type : 'radio' ,\r\n            valueKey : 'gender' ,\r\n            fieldProps : {\r\n                options : [\r\n                    {name : 'Female' , value : 'Female'} , \r\n                    {name : 'Male' , value : 'Male'} , \r\n                    {name : 'Others' , value : 'Others'}\r\n                ],\r\n                label : 'Gender',\r\n                className: styleClass.bottomMargin\r\n            }\r\n        }];\r\n     \r\n\r\n\r\n    const handleSubmit = ( values : UserData , onSubmitProps: FormikHelpers<UserData> ) => {\r\n        \r\n        if(editData !== undefined) {\r\n            updateData(values);\r\n            clearEdit(undefined);\r\n        } else {\r\n            addData(values);\r\n        }\r\n\r\n        setUserInfo({ id : (userStore.getState().userList.length) , name : '' , age : '' , gender : '' }); \r\n        onSubmitProps.setSubmitting(false);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {/* User Form component */}\r\n                \r\n            <Box display='flex' justifyContent='center' alignItems='center' minHeight={mediaQueryMatch ? '100vh' : '500px'}  >\r\n                <Box p={4} borderRadius={15} boxShadow={3} className={styleClass.basicBoxStyle}>\r\n\r\n                    <ReactForm\r\n                    formId='userForm'\r\n                    actionConfig={actionConfig}\r\n                    config={formConfig}\r\n                    initialValues={userInfo}\r\n                    onSubmit = {handleSubmit} \r\n                    enableReinitialize \r\n                    />\r\n\r\n                </Box>\r\n            </Box>\r\n        </>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    basicBoxStyle: {\r\n        background: '#fff',\r\n        width: '90%',\r\n        maxWidth: '400px',\r\n        margin: 'auto'\r\n    },\r\n    bottomMargin: {\r\n        marginBottom: '20px'\r\n    }\r\n});","import DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { Typography, Box, Tooltip, Fab, makeStyles } from '@material-ui/core';\r\nimport { useStoreActions, useStoreState } from '../userStore/userStore';\r\n\r\nexport default function UserCardList() {\r\n\r\n    const userListRef = useStoreState(state => state.userList);\r\n\r\n    const deleteClick = useStoreActions((action) =>  action.deleteUser );\r\n    const editClick = useStoreActions((action) => action.editUser );\r\n\r\n    const styleClass = useStyles();\r\n\r\n    return (\r\n\r\n        // User Card List Component \r\n        <div>\r\n            {(userListRef.length) > 0 ? (\r\n                userListRef.map(userRef => {\r\n                    return(\r\n                        \r\n                        <div key={userRef.id}>\r\n                            <Box p={2} borderRadius={10} mb={2} className={styleClass.boxStyle}>\r\n                                <Typography variant='h6' className={styleClass.textStyle}> Name : {userRef.name}  |</Typography>\r\n                                <Typography variant='h6' className={styleClass.textStyle}>  Age : {userRef.age}  |</Typography>\r\n                                <Typography variant='h6' className={styleClass.textStyle}>  Gender : {userRef.gender}  </Typography>\r\n                                <Box mx={2} display='inline'>\r\n                                    <Tooltip title=\"Edit\" aria-label=\"edit\">\r\n                                        <Fab onClick={() => editClick(userRef.id)} className={styleClass.editStyle} >\r\n                                            <EditIcon />\r\n                                        </Fab>\r\n                                    </Tooltip>\r\n                                </Box>\r\n                                <Tooltip title=\"Delete\" aria-label=\"delete\">\r\n                                    <Fab color='secondary' onClick={() => deleteClick(userRef.id)} >\r\n                                        <DeleteIcon />\r\n                                    </Fab>\r\n                                </Tooltip>\r\n                                    \r\n                            </Box>\r\n                        </div>\r\n\r\n                    );\r\n                })\r\n            ) : (\r\n                <Box p={2} borderRadius={10} mb={2} className={styleClass.boxStyle}><Typography>No Cards Present</Typography></Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    boxStyle: { backgroundColor:'#d8f3dc' },\r\n    textStyle: { display:'inline' },\r\n    editStyle: {\r\n        backgroundColor:\"#ee9b00\",\r\n        color:\"#fff\"\r\n    }\r\n});","import { Box, Grid } from '@material-ui/core';\nimport UserForm from './component/UserForm';\nimport UserCardList from './component/UserCardList';\n\nfunction App() {\n  return (\n    <>\n        <Grid container>\n          <Grid item md={6} xs={12}>\n              <UserForm />\n          </Grid>\n          <Grid item md={6} xs={12} style={{backgroundColor:'#52b788'}}>\n              <Box p={3}>\n                <UserCardList />\n              </Box>\n          </Grid>\n        </Grid>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { StoreProvider } from 'easy-peasy';\nimport userStore from './userStore/userStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={userStore}>\n        <App />\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}